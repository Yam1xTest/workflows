name: Run playwright E2E tests

on: 
  workflow_call:
    inputs:
      # In some services we are using prefixes to build docker images for local-env and prod-env with different tags
      # Prefix defines which prefix will be used in image tag
      # Example of prefix: local-env
      prefix:
        required: false
        type: string
      # Example of path_to_values: "deploy/values-ui.yaml.gotmpl"
      path_to_values:
        required: true
        type: string
      # deploy_env defines variables for local-env
      # Examples of deploy_env: "|
                              # PELICAN_UI_BRANCH=${{ github.head_ref || github.ref_name }}"
      deploy_env:
        required: false
        type: string
      # playwright_env defines variables for playwright tests
      # Examples of playwright_env: "FRONTEND_URL: http://localhost:40110 
                                    #API_URL: 'http://localhost:40110/cms/api'"
      playwright_env:
        required: false
        type: string
      
jobs:
  run-playwright-e2e-tests:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        node-version: [20.18.0]

    steps:
      - name: Checkout local-env
        uses: actions/checkout@v4
        with:
          repository: Yam1xTest/pelican-local-env

      - name: Deploy Local Env to Kind k8s
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            # we need to override "latest" image tag of ui inside local-env to run tests against the current commit ui version and not against latest from master
            # We tried to use yq to change the image tag, but in the values files for helmfile we have non-yaml code that yq can`t parse or ignore
            # so for that reason we use Stream EDitor which can find needeed string using regular expressions and change it to a new value
            # The -i flag is needed to write new image tag directly to values file
            # sed -i "0,/tag:.*/s//tag: \"${{ inputs.prefix && format('{0}-', inputs.prefix) || '' }}sha-${{ github.sha }}\"/" ${{ inputs.path_to_values }}

            kind create cluster --name pelican --config kind-local-config.yaml --kubeconfig ./.pelican-cluster-kubeconfig
            
            export KUBECONFIG=$(pwd)/.pelican-cluster-kubeconfig

            helmfile --environment local --namespace local -f deploy/helmfile.yaml apply
          push: never
          env: ${{ inputs.deploy_env }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  
      # let's cache the binaries of installed browsers that we don't re-install them every time from scratch
      - name: Cache playwright browsers
        id: cache-playwrightbrowsers
        uses: actions/cache@v4
        env:
          cache-name: cache-playwright-browsers
        with:
          # caching browsers binaries
          # this path is taken from here https://playwright.dev/docs/browsers#managing-browser-binaries
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Playwright Browsers
        if: steps.cache-playwrightbrowsers.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      - name: Playwright run
        run: |
          echo "${{ inputs.playwright_env }}" >> $GITHUB_ENV
          npm run playwright:run:e2e --reporter=html 

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 7
